name: Regression exceptions tests

on:
  workflow_call:

jobs:

  regression-tests:
    name: Regression exceptions tests
    runs-on: ubuntu-latest
    container: ghcr.io/antmicro/cores-veer-el2:latest
    strategy:
      matrix:
        bus: ["axi"]
        test: ["machine_external_ints", "dbus_store_error", "lsu_trigger_hit", "machine_external_vec_ints", "dside_pic_access_error",
               "iside_fetch_precise_bus_error", "dside_access_region_prediction_error", "cmark", "iside_core_local_unmapped_address_error",
               "dside_access_across_region_boundary", "nmi_pin_assertion", "dside_size_misaligned_access_to_non_idempotent_address",
               "dside_core_local_access_unmapped_address_error", "dbus_nonblocking_load_error", "internal_timer_ints", "ebreak_ecall", "illegal_instruction"]
        coverage: ["all", "branch", "toggle"] #TODO: add functional coverage
        priv: ["0"]
    env:
      DEBIAN_FRONTEND: "noninteractive"
      CCACHE_DIR: "/opt/regression/.cache/"

    steps:
      - name: Install utils
        run: |
          sudo apt -qqy update && sudo apt -qqy --no-install-recommends install \
            git python3 python3-pip build-essential ninja-build cpanminus ccache \
            gcc-riscv64-unknown-elf
          sudo cpanm Bit::Vector
          pip3 install meson

      - name: Setup Cache Metadata
        id: cache_metadata
        run: |
          date=$(date +"%Y_%m_%d")
          time=$(date +"%Y%m%d_%H%M%S_%N")
          cache_test_restore_key=${{ matrix.test }}_${{ matrix.coverage }}_
          cache_test_key=${cache_test_restore_key}${time}

          echo "date=$date" | tee -a "$GITHUB_ENV"
          echo "time=$time" | tee -a "$GITHUB_ENV"
          echo "cache_test_restore_key=$cache_test_restore_key" | tee -a "$GITHUB_ENV"
          echo "cache_test_key=$cache_test_key" | tee -a "$GITHUB_ENV"

      - name: Setup tests cache
        uses: actions/cache@v3
        id: cache-test-setup
        with:
          path: |
            ${{ env.CCACHE_DIR }}
          key: ${{ env.cache_test_key }}
          restore-keys: ${{ env.cache_test_restore_key }}

      - name: Setup repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: install SiteSpawner package
        shell: bash
        run: |
          python3 -m venv .venv
          .venv/bin/python3 -m pip install tools/SiteSpawner
          source .venv/bin/activate
          echo "PATH=$PATH" >> $GITHUB_ENV
          python3 -m pip install tools/SiteSpawner

      - name: Setup environment
        shell: bash
        run: |
          echo "/opt/verilator/bin" >> $GITHUB_PATH
          RV_ROOT=`pwd`
          echo "RV_ROOT=$RV_ROOT" >> $GITHUB_ENV
          PYTHONUNBUFFERED=1
          echo "PYTHONUNBUFFERED=$PYTHONUNBUFFERED" >> $GITHUB_ENV
          TEST_PATH=$RV_ROOT/test_results
          echo "TEST_PATH=$TEST_PATH" >> $GITHUB_ENV

      - name: Run tests
        shell: bash
        run: |
          export PATH=/opt/verilator/bin:$PATH
          export RV_ROOT=`pwd`
          .github/scripts/run_regression_test.sh $TEST_PATH ${{ matrix.bus }} ${{ matrix.test}} ${{ matrix.coverage }} ${{ matrix.priv }}

      - name: Prepare coverage data
        shell: bash
        run: |
          source .venv/bin/activate
          sis -d convert --dat-dir ${TEST_PATH}/
          mkdir -p results
          mv ${TEST_PATH}/coverage.info \
             results/coverage_${{ matrix.bus }}_${{ matrix.test }}_${{ matrix.coverage }}.info

      - name: Pack artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: regression_tests_coverage_data
          path: results/*.info
