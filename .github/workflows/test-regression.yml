name: Regression tests

on:
  workflow_call:

jobs:

  regression-tests:
    name: Regression tests
    runs-on: ubuntu-latest
    container: ghcr.io/antmicro/cores-veer-el2:latest
    strategy:
      matrix:
        bus: ["axi", "ahb"]
        test: ["hello_world", "hello_world_dccm", "hello_world_iccm", "cmark", "cmark_dccm", "cmark_iccm", "dhry", "ecc",
               "csr_misa", "csr_access", "csr_mstatus", "csr_mseccfg", "modesw", "insns", "irq", "perf_counters", "pmp", "write_unaligned"]
        coverage: ["all", "branch", "toggle"] #TODO: add functional coverage
        priv: ["0", "1"]
        exclude:
          - priv: "0"
            test: "csr_mseccfg"
    env:
      DEBIAN_FRONTEND: "noninteractive"
      CCACHE_DIR: "/opt/regression/.cache/"

    steps:
      - name: Install utils
        run: |
          sudo apt -qqy update && sudo apt -qqy --no-install-recommends install \
            git python3 python3-pip build-essential ninja-build ccache \
            gcc-riscv64-unknown-elf
          pip3 install meson

      - name: Setup repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: install SiteSpawner package
        shell: bash
        run: |
          python3 -m venv .venv
          .venv/bin/python3 -m pip install tools/SiteSpawner
          source .venv/bin/activate
          echo "PATH=$PATH" >> $GITHUB_ENV
          python3 -m pip install tools/SiteSpawner

      - name: Setup environment
        shell: bash
        run: |
          echo "/opt/verilator/bin" >> $GITHUB_PATH
          RV_ROOT=`pwd`
          echo "RV_ROOT=$RV_ROOT" >> $GITHUB_ENV
          PYTHONUNBUFFERED=1
          echo "PYTHONUNBUFFERED=$PYTHONUNBUFFERED" >> $GITHUB_ENV
          TEST_PATH=$RV_ROOT/test_results
          echo "TEST_PATH=$TEST_PATH" >> $GITHUB_ENV

      - name: Run tests
        shell: bash
        run: |
          export PATH=/opt/verilator/bin:$PATH
          export RV_ROOT=`pwd`
          .github/scripts/run_regression_test.sh $TEST_PATH ${{ matrix.bus }} ${{ matrix.test}} ${{ matrix.coverage }} ${{ matrix.priv }}

      - name: Prepare coverage data
        shell: bash
        run: |
          source .venv/bin/activate
          sis -d convert --dat-dir ${TEST_PATH}/
          mkdir -p results
          mv ${TEST_PATH}/coverage.info \
             results/coverage_${{ matrix.bus }}_${{ matrix.test }}_${{ matrix.coverage }}.info

      - name: Pack artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: regression_tests_coverage_data
          path: results/*.info

  custom-regression-tests:
    name: Custom regression tests
    runs-on: [ self-hosted, Linux, X64, gcp-custom-runners ]
    container: centos:8
    env:
      GHA_EXTERNAL_DISK: additional-tools
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Prepare Environment
        run: _secret_prepare_env

      - name: Run tests
        run: _secret_custom_test
