name: RISCOF tests

on:
  workflow_call:

jobs:

  tests:
    name: Run RISCOF tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        coverage: ["all", "branch", "toggle"] #TODO: add functional coverage
    env:
      DEBIAN_FRONTEND: "noninteractive"
      CCACHE_DIR: "/opt/riscof/.cache/"
      VERILATOR_VERSION: v5.010
      SPIKE_VERSION: d70ea67d

    steps:
      - name: Install utils
        run: |
          sudo apt -qqy update && sudo apt -qqy --no-install-recommends install \
            git ccache python3-minimal python3-pip device-tree-compiler \
            gcc-riscv64-unknown-elf cpanminus build-essential ninja-build
          sudo cpanm Bit::Vector

      - name: Setup Cache Metadata
        id: cache_metadata
        run: |
          date=$(date +"%Y_%m_%d")
          time=$(date +"%Y%m%d_%H%M%S_%N")
          cache_verilator_restore_key=cache_verilator_
          cache_verilator_key=${cache_verilator_restore_key}${{ env.VERILATOR_VERSION }}
          cache_spike_restore_key=cache_spike_
          cache_spike_key=${cache_spike_restore_key}${{ env.SPIKE_VERSION }}
          cache_test_restore_key=${{ matrix.test }}_${{ matrix.coverage }}_
          cache_test_key=${cache_test_restore_key}${time}
          echo "date=$date" | tee -a "$GITHUB_ENV"
          echo "time=$time" | tee -a "$GITHUB_ENV"
          echo "cache_verilator_restore_key=$cache_verilator_restore_key" | tee -a "$GITHUB_ENV"
          echo "cache_verilator_key=$cache_verilator_key" | tee -a "$GITHUB_ENV"
          echo "cache_spike_restore_key=$cache_spike_restore_key" | tee -a "$GITHUB_ENV"
          echo "cache_spike_key=$cache_spike_key" | tee -a "$GITHUB_ENV"
          echo "cache_test_restore_key=$cache_test_restore_key" | tee -a "$GITHUB_ENV"
          echo "cache_test_key=$cache_test_key" | tee -a "$GITHUB_ENV"

      - name: Restore Verilator cache
        id: cache-verilator-restore
        uses: actions/cache/restore@v3
        with:
          path: |
            /opt/verilator
            /opt/verilator/.cache
          key: ${{ env.cache_verilator_key }}
          restore-keys: ${{ env.cache_verilator_restore_key }}

      - name: Restore Spike cache
        id: cache-spike-restore
        uses: actions/cache/restore@v3
        with:
          path: |
            /opt/spike
            /opt/spike/.cache
          key: ${{ env.cache_spike_key }}
          restore-keys: ${{ env.cache_spike_restore_key }}

      - name: Setup tests cache
        uses: actions/cache@v3
        id: cache-test-setup
        with:
          path: |
            ${{ env.CCACHE_DIR }}
          key: ${{ env.cache_test_key }}
          restore-keys: ${{ env.cache_test_restore_key }}

      - name: Create Cache Timestamp
        id: cache_timestamp
        uses: nanzm/get-time-action@v1.1
        with:
          format: 'YYYY-MM-DD-HH-mm-ss'

      - name: Setup cache
        uses: actions/cache@v2
        timeout-minutes: 60
        continue-on-error: true
        with:
          path: "/opt/veer-el2/.cache/"
          key: cache_riscof_tests_${{ steps.cache_timestamp.outputs.time }}
          restore-keys: cache_riscof_tests_

      - name: Setup repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install RISCOF
        run: |
          pip3 install git+https://github.com/riscv/riscof@a25e315

      - name: Clone tests
        run: |
          mkdir -p riscof
          pushd riscof
            riscof --verbose info arch-test --clone
            # FIXME: It seems impossible to turn off Zicsr extension. A
            # temporary solution is to remove the tests.
            rm -rf riscv-arch-test/riscv-test-suite/rv32i_m/privilege/
          popd

      - name: Configure RISCOF
        run: |
          pushd riscof
            # Copy RISCOF configuration
            cp ../tools/riscof/config.ini ./
            cp -r ../tools/riscof/spike ./
            cp -r ../tools/riscof/veer ./
            # Build the test list
            riscof testlist --config=config.ini --suite=riscv-arch-test/riscv-test-suite/ --env=riscv-arch-test/riscv-test-suite/env
          popd

      - name: Build VeeR model
        run: |
          export PATH=/opt/verilator/bin:$PATH
          export RV_ROOT=`pwd`
          pushd riscof
            $RV_ROOT/configs/veer.config
            make -f $RV_ROOT/tools/Makefile verilator-build COVERAGE=${{ matrix.coverage }}
          popd

      - name: Run tests, collect coverage
        run: |
          export PATH=/opt/verilator/bin:/opt/spike/bin:$PATH
          pushd riscof
            riscof run --no-browser --config=config.ini --suite=riscv-arch-test/riscv-test-suite/ --env=riscv-arch-test/riscv-test-suite/env
            mkdir -p coverage
            verilator_coverage -write ./coverage/coverage.dat `find ./riscof_work/ -type f -name "coverage.dat"`
          popd

      - name: Prepare coverage data
        run: |
          export PATH=/opt/verilator/bin:$PATH
          .github/scripts/convert_coverage_data.sh riscof/coverage/
          echo "convert_coverage_data.sh exited with RET_CODE = "$?
          mv riscof/coverage/coverage.info \
             riscof/coverage/coverage_riscof_${{ matrix.coverage }}.info

      - name: Prepare report
        run: |
          PYTEST_STYLE_SRC_DIR=${{ github.workspace }}/.github/scripts/pytest/
          PYTEST_CSS=${PYTEST_STYLE_SRC_DIR}/css/styles.css
          pushd riscof/riscof_work
            bash ${PYTEST_STYLE_SRC_DIR}/style_pytest_report.sh ${PYTEST_STYLE_SRC_DIR} . report.html
            echo "/* Custom CSS */" >>style.css
            cat ${PYTEST_CSS} >>style.css
          popd

      - name: Pack artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: riscof_coverage_data
          path: riscof/coverage/*.info

      - name: Pack artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: riscof-report
          path: |
            riscof/riscof_work/report.html
            riscof/riscof_work/style.css
            riscof/riscof_work/assets
            riscof/riscof_work/script
